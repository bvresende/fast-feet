generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  COURIER
}

model User {
  id       String   @id @default(uuid())
  name     String
  cpf      String   @unique
  password String
  role     UserRole @default(COURIER)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  Package   Package[]

  @@map("users")
}

model Recipient {
  id          String @id @default(uuid())
  name        String
  cpf         String @unique
  email       String
  phoneNumber String

  street       String
  number       String
  complement   String?
  neighborhood String
  city         String
  state        String
  zipCode      String  @map("zip_code")
  latitude     Float?
  longitude    Float?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  Package   Package[]

  @@map("recipients")
}

enum PackageStatus {
  WAITING_FOR_PICKUP
  IN_TRANSIT
  DELIVERED
  RETURNED
}

model Package {
  id          String        @id @default(uuid())
  description String
  status      PackageStatus @default(WAITING_FOR_PICKUP)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime?     @updatedAt @map("updated_at")

  pickedUpAt  DateTime? @map("picked_up_at")
  deliveredAt DateTime? @map("delivered_at")
  returnedAt  DateTime? @map("returned_at")
  photoUrl    String?   @map("photo_url")

  recipientId String    @map("recipient_id")
  recipient   Recipient @relation(fields: [recipientId], references: [id])

  courierId String? @map("courier_id")
  courier   User?   @relation(fields: [courierId], references: [id])

  @@map("packages")
}
